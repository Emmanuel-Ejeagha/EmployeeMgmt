@page "/identity/account/register"
@layout AuthenticationLayout
@using Client.Pages.OtherPages
@using Syncfusion.Blazor.Popups
@inject SfDialogService DialogService 
<div class="container d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="col-lg-4">
        <EditForm Enhance Model="User" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <div class="card bg-dark p-4 shadow-lg" style="opacity: 0.85; border-radius: 15px; color: white; font-weight: bold;">
                <div class="card-header text-center fs-4">Register</div>
                <div class="text-center my-3">
                    <img src="../images/companylogos/logo.png" alt="logo" style="border-radius: 20px;" height="50" width="50" />
                </div>
                <div class="card-body">
                    <div class="form-group mt-3">
                        <label class="form-label text-left d-block">Full Name</label>
                        <InputText @bind-Value="User.Fullname" class="form-control"></InputText>
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label text-left d-block">Email</label>
                        <InputText @bind-Value="User.Email" class="form-control"></InputText>
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label text-left d-block">Password</label>
                        <input type="password" @bind="User.Password" class="form-control"></input>
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label text-left d-block">Confirm Password</label>
                        <InputText type="password" @bind-Value="User.ConfirmPassword" class="form-control"></InputText>
                    </div>
                    <div class="form-group mt-4">
                        @if (ShowLoadingButton)
                        {
                            <ButtonLoadingSpinner></ButtonLoadingSpinner>
                        }
                        else
                        {
                            <button class="btn btn-primary w-100" type="submit">Register</button>
                        }
                    </div>
                </div>
                <div class="card-footer">
                    <span class="text-center">
                        Have account already?
                        <a href="identity/account/login" class="btn-link">Login</a>
                    </span>
                    <ValidationSummary />
                </div>
            </div>
        </EditForm>
    </div>
</div>



@code {
    public bool ShowLoadingButton { get; set; } = false;
    Register User = new();

    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set;}
    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    async Task HandleRegistration()
    {
        ShowLoadingButton = true;
        var result = await accountService.CreateAsync(User);
        if (result.Flag)
        {
            await DisplayDialog(result.Message, "Success");
            User = new();
        }
        else
        {
            await DisplayDialog(result.Message, "Alert");
        }
        ShowLoadingButton = false;
    }
    private async Task DisplayDialog(string content, string title)
    {
        await DialogService.AlertAsync(content, title);
    }
     private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
            NavManager.NavigateTo("/home/dashboard");
    }
}